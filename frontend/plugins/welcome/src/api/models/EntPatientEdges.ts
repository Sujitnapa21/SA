/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Patient
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBloodtype,
    EntBloodtypeFromJSON,
    EntBloodtypeFromJSONTyped,
    EntBloodtypeToJSON,
    EntEmployee,
    EntEmployeeFromJSON,
    EntEmployeeFromJSONTyped,
    EntEmployeeToJSON,
    EntGender,
    EntGenderFromJSON,
    EntGenderFromJSONTyped,
    EntGenderToJSON,
    EntNameTitle,
    EntNameTitleFromJSON,
    EntNameTitleFromJSONTyped,
    EntNameTitleToJSON,
    EntStatus,
    EntStatusFromJSON,
    EntStatusFromJSONTyped,
    EntStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntPatientEdges
 */
export interface EntPatientEdges {
    /**
     * 
     * @type {EntBloodtype}
     * @memberof EntPatientEdges
     */
    bloodtype?: EntBloodtype;
    /**
     * 
     * @type {EntEmployee}
     * @memberof EntPatientEdges
     */
    employee?: EntEmployee;
    /**
     * 
     * @type {EntGender}
     * @memberof EntPatientEdges
     */
    gender?: EntGender;
    /**
     * 
     * @type {EntNameTitle}
     * @memberof EntPatientEdges
     */
    nametitle?: EntNameTitle;
    /**
     * 
     * @type {EntStatus}
     * @memberof EntPatientEdges
     */
    status?: EntStatus;
}

export function EntPatientEdgesFromJSON(json: any): EntPatientEdges {
    return EntPatientEdgesFromJSONTyped(json, false);
}

export function EntPatientEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntPatientEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bloodtype': !exists(json, 'Bloodtype') ? undefined : EntBloodtypeFromJSON(json['Bloodtype']),
        'employee': !exists(json, 'Employee') ? undefined : EntEmployeeFromJSON(json['Employee']),
        'gender': !exists(json, 'Gender') ? undefined : EntGenderFromJSON(json['Gender']),
        'nametitle': !exists(json, 'Nametitle') ? undefined : EntNameTitleFromJSON(json['Nametitle']),
        'status': !exists(json, 'Status') ? undefined : EntStatusFromJSON(json['Status']),
    };
}

export function EntPatientEdgesToJSON(value?: EntPatientEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bloodtype': EntBloodtypeToJSON(value.bloodtype),
        'employee': EntEmployeeToJSON(value.employee),
        'gender': EntGenderToJSON(value.gender),
        'nametitle': EntNameTitleToJSON(value.nametitle),
        'status': EntStatusToJSON(value.status),
    };
}


