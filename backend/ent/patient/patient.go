// Code generated by entc, DO NOT EDIT.

package patient

const (
	// Label holds the string label denoting the patient type in the database.
	Label = "patient"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIdcard holds the string denoting the idcard field in the database.
	FieldIdcard = "idcard"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldCongenital holds the string denoting the congenital field in the database.
	FieldCongenital = "congenital"
	// FieldAllergic holds the string denoting the allergic field in the database.
	FieldAllergic = "allergic"

	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeStatus holds the string denoting the status edge name in mutations.
	EdgeStatus = "status"
	// EdgeBloodtype holds the string denoting the bloodtype edge name in mutations.
	EdgeBloodtype = "bloodtype"
	// EdgeGender holds the string denoting the gender edge name in mutations.
	EdgeGender = "gender"
	// EdgeNametitle holds the string denoting the nametitle edge name in mutations.
	EdgeNametitle = "nametitle"

	// Table holds the table name of the patient in the database.
	Table = "patients"
	// EmployeeTable is the table the holds the employee relation/edge.
	EmployeeTable = "patients"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employees"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_patient"
	// StatusTable is the table the holds the status relation/edge.
	StatusTable = "patients"
	// StatusInverseTable is the table name for the Status entity.
	// It exists in this package in order to avoid circular dependency with the "status" package.
	StatusInverseTable = "status"
	// StatusColumn is the table column denoting the status relation/edge.
	StatusColumn = "status_patient"
	// BloodtypeTable is the table the holds the bloodtype relation/edge.
	BloodtypeTable = "patients"
	// BloodtypeInverseTable is the table name for the Bloodtype entity.
	// It exists in this package in order to avoid circular dependency with the "bloodtype" package.
	BloodtypeInverseTable = "bloodtypes"
	// BloodtypeColumn is the table column denoting the bloodtype relation/edge.
	BloodtypeColumn = "bloodtype_patient"
	// GenderTable is the table the holds the gender relation/edge.
	GenderTable = "patients"
	// GenderInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	GenderInverseTable = "genders"
	// GenderColumn is the table column denoting the gender relation/edge.
	GenderColumn = "gender_patient"
	// NametitleTable is the table the holds the nametitle relation/edge.
	NametitleTable = "patients"
	// NametitleInverseTable is the table name for the NameTitle entity.
	// It exists in this package in order to avoid circular dependency with the "nametitle" package.
	NametitleInverseTable = "name_titles"
	// NametitleColumn is the table column denoting the nametitle relation/edge.
	NametitleColumn = "name_title_patient"
)

// Columns holds all SQL columns for patient fields.
var Columns = []string{
	FieldID,
	FieldIdcard,
	FieldName,
	FieldAddress,
	FieldCongenital,
	FieldAllergic,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Patient type.
var ForeignKeys = []string{
	"bloodtype_patient",
	"employee_patient",
	"gender_patient",
	"name_title_patient",
	"status_patient",
}
